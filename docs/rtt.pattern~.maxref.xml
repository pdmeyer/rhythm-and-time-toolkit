<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<!--If you edit this file, please place
it in a safe place since future exports will overwrite this automatically generated reference
file.-->
<c74object name="rtt.pattern~">
    <metadatalist>
        <metadata name="author">Philip Meyer</metadata>
        <metadata name="tag">sequencing</metadata>
    </metadatalist>
    <methodlist>
        <method name="in4">
            <digest>Gate Pattern</digest>
            <description>A list of 0s and 1s stores a gate pattern that the object will play back.</description>
        </method>
        <method name="pattern">
            <digest>Gate Pattern</digest>
            <description>The same as in4, prepended by the symbols "message pattern".</description>
        </method>
    </methodlist>
    <attributelist>
        <attribute name="counter" get="1" set="1" size="1" type="float64">
            <digest>Specifies the type of input the object should expect. 0 is for phasor-like
                signals, and 1 is for stepwise counter signals.</digest>
            <attributelist>
                <attribute name="default" get="1" set="1" type="int" size="1" value="0" />
                <attribute name="enumvals" get="1" set="1" type="atom" size="2">
                    <enumlist>
                        <enum name="index">
                            <digest>
                                Counter signal
                            </digest>
                            <description>
                                The input signal is expected to be counter. The value at the left
                                inlet is rounded to the nearest whole number and used to evaluate
                                the step in the pattern.
                            </description>
                        </enum>
                        <enum name="norm">
                            <digest>
                                Phasor/ramp signal
                            </digest>
                            <description> The input signal is expected to be a ramp between 0. and
                                1. The signal is subdivided according to <at>steps</at>, and the
                                resulting step index is used to evaluate the step in the pattern. </description>
                        </enum>
                    </enumlist>
                </attribute>
                <attribute name="label" get="1" set="1" type="symbol" size="1" value="Counter Mode" />
                <attribute name="style" get="1" set="1" type="symbol" size="1" value="enumindex" />
            </attributelist>
        </attribute>
        <attribute name="trigger" get="1" set="1" size="1" type="float64">
            <digest>Determines how the object responds to signals to the first and second inlets.</digest>
            <attributelist>
                <attribute name="default" get="1" set="1" type="int" size="1" value="1" />
                <attribute name="enumvals" get="1" set="1" type="atom" size="3">
                    <enumlist>
                        <enum name="both">
                            <digest>
                                Counter and trigger
                            </digest>
                            <description>
                                A trigger is required at the second inlet to evaluate a new step in
                                the pattern. The value at the first inlet is used to select the step
                                to be evaulated.
                            </description>
                        </enum>
                        <enum name="counter">
                            <digest>
                                Counter only
                            </digest>
                            <description>
                                A new step in the pattern is evaluated any time the signal value at
                                the first inlet changes.
                            </description>
                        </enum>
                        <enum name="trigger">
                            <digest>
                                Trigger only
                            </digest>
                            <description>
                                The first inlet is ignored. A trigger at the second inlet causes a
                                step to be evaluated, and the step is chosen by keeping a running
                                count of triggers received at the second inlet.
                            </description>
                        </enum>
                    </enumlist>
                </attribute>
                <attribute name="label" get="1" set="1" type="symbol" size="1" value="Trigger Mode" />
                <attribute name="style" get="1" set="1" type="symbol" size="1" value="enumindex" />
            </attributelist>
        </attribute>
        <attribute name="output" get="1" set="1" size="1" type="float64">
            <digest>Determines how the output of the first outlet represents the pattern’s position.
                For non-activated steps, the output is always 0.</digest>
            <attributelist>
                <attribute name="default" get="1" set="1" type="int" size="1" value="4" />
                <attribute name="enumvals" get="1" set="1" type="atom" size="5">
                    <enumlist>
                        <enum name="none">
                            <digest>
                                No output
                            </digest>
                            <description>
                                A signal of value 0. is sent from the first outlet.
                            </description>
                        </enum>
                        <enum name="input">
                            <digest>
                                Input counter
                            </digest>
                            <description>
                                The value at the first inlet is passed through to the input.
                            </description>
                        </enum>
                        <enum name="step">
                            <digest>
                                Current step
                            </digest>
                            <description>
                                The index of the step in the pattern.
                            </description>
                        </enum>
                        <enum name="event">
                            <digest>
                                Current event
                            </digest>
                            <description>
                                The index of the event in the pattern. (e.g. if the pattern has 4
                                events, the final event’s index is 4).
                            </description>
                        </enum>
                        <enum name="event">
                            <digest>
                                Running count of events
                            </digest>
                            <description>
                                A running count of the number of events.
                            </description>
                        </enum>
                        <enum name="gate">
                            <digest>
                                Boolean gate
                            </digest>
                            <description>
                                The value 1 for the duration of the step.
                            </description>
                        </enum>
                    </enumlist>
                </attribute>
                <attribute name="label" get="1" set="1" type="symbol" size="1" value="Output Mode" />
                <attribute name="style" get="1" set="1" type="symbol" size="1" value="enumindex" />
            </attributelist>
        </attribute>
        <attribute name="rotate" get="1" set="1" size="1" type="float64">
            <digest>Number of steps to wrap the pattern.</digest>
        </attribute>
    </attributelist>
    <description>rtt.playback~ takes in a gate pattern and plays it back. It accepts an index or
        normalized input signal and outputs multiple types of counters.</description>
    <digest>Play back gate patterns</digest>
    <seealsolist>
        <seealsolist>
            <seealso name="rtt.binary~" />
            <seealso name="rtt.emask~" />
            <seealso name="rtt.euclidean~" />
            <seealso name="rtt.pprob~" />
        </seealsolist>
    </seealsolist>
    <metadatalist>
        <metadata name='author'>Philip Meyer</metadata>
    </metadatalist>
</c74object>