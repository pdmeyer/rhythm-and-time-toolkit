<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<!--If you edit this file, please place it in a safe place since future exports will overwrite this automatically generated reference file.-->
<c74object name="seq.emask~">
<metadatalist>
<metadata name="author">Philip Meyer</metadata>
<metadata name="tag">sequencing</metadata>
</metadatalist>
<methodlist>
<method name="calculate">
    <digest>Recalculate Pattern</digest>
    <description>The message "message vary bang" tells seq.emask~ to regenerate the pattern.</description>
</method>
</methodlist>
<attributelist>
    <attribute name="countermode" get="1" set="1" size="1" type="float64">
        <digest>Specifies the type of input the object should expect. 0 is for phasor-like signals, and 1 is for stepwise counter signals.</digest>
        <attributelist>
            <attribute name="default" get="1" set="1" type="int" size="1" value="0" />
            <attribute name="enumvals" get="1" set="1" type="atom" size="2">
                <enumlist>
                    <enum name="index">
                        <digest>
                            Counter signal
                        </digest>
                        <description>
                            The input signal is expected to be counter. The value at the left inlet is rounded to the nearest whole number and used to evaluate the step in the pattern.
                        </description>
                    </enum>
                    <enum name="normalized">
                        <digest>
                            Phasor/ramp signal
                        </digest>
                        <description>
                            The input signal is expected to be a ramp between 0. and 1. The signal is subdivided according to <at>steps</at>, and the resulting step index is used to evaluate the step in the pattern.
                        </description>
                    </enum>
                </enumlist>
            </attribute>
            <attribute name="label" get="1" set="1" type="symbol" size="1" value="Counter Mode" />
            <attribute name="style" get="1" set="1" type="symbol" size="1" value="enumindex" />
        </attributelist>
        </attribute>
        <attribute name="triggermode" get="1" set="1" size="1" type="float64">
        <digest>Determines how the object responds to signals to the first and second inlets.</digest>
        <attributelist>
            <attribute name="default" get="1" set="1" type="int" size="1" value="1" />
            <attribute name="enumvals" get="1" set="1" type="atom" size="3">
                <enumlist>
                    <enum name="trigger">
                        <digest>
                            Counter and trigger
                        </digest>
                        <description>
                            A trigger is required at the second inlet to evaluate a new step in the pattern. The value at the first inlet is used to select the step to be evaulated.
                        </description>
                    </enum>
                    <enum name="change">
                        <digest>
                            Counter only
                        </digest>
                        <description>
                            A new step in the pattern is evaluated any time the signal value at the first inlet changes.
                        </description>
                    </enum>
                    <enum name="count">
                        <digest>
                            Trigger only
                        </digest>
                        <description>
                            The first inlet is ignored. A trigger at the second inlet causes a step to be evaluated, and the step is chosen by keeping a running count of triggers received at the second inlet.
                        </description>
                    </enum>
                </enumlist>
            </attribute>
            <attribute name="label" get="1" set="1" type="symbol" size="1" value="Trigger Mode" />
            <attribute name="style" get="1" set="1" type="symbol" size="1" value="enumindex" />
        </attributelist>
        </attribute>
        <attribute name="outputmode" get="1" set="1" size="1" type="float64">
        <digest>Determines how the output of the first outlet represents the pattern’s position. For non-activated steps, the output is always 0.</digest>
        <attributelist>
            <attribute name="default" get="1" set="1" type="int" size="1" value="4" />
            <attribute name="enumvals" get="1" set="1" type="atom" size="5">
                <enumlist>
                    <enum name="input_counter">
                        <digest>
                            Input counter 
                        </digest>
                        <description>
                            The value at the first inlet is passed through to the input. 
                        </description>
                    </enum>
                    <enum name="step_ix">
                        <digest>
                            Current step
                        </digest>
                        <description>
                            The index of the step in the pattern.
                        </description>
                    </enum>
                    <enum name="event_ix">
                        <digest>
                            Current event
                        </digest>
                        <description>
                            The index of the event in the pattern. (e.g. if the pattern has 4 events, the final event’s index is 4). 
                        </description>
                    </enum>
                    <enum name="event_count">
                        <digest>
                            Running count of events
                        </digest>
                        <description>
                            A running count of the number of events.
                        </description>
                    </enum>
                    <enum name="gate">
                        <digest>
                            Boolean gate
                        </digest>
                        <description>
                            The value 1 for the duration of the step.
                        </description>
                    </enum>
                </enumlist>
            </attribute>
            <attribute name="label" get="1" set="1" type="symbol" size="1" value="Output Mode" />
            <attribute name="style" get="1" set="1" type="symbol" size="1" value="enumindex" />
        </attributelist>
        </attribute>
<attribute name="steps" get="1" set="1" size="1" type="float64">
<digest>Number of steps to count. When <at>steps</at> is greater than the absolute value of <at>ceiling</at> minus <at>floor</at>, the counter wraps around. Also determines the subdivision when <at>subdivmode</at> is ‘polyrhythmic’.</digest>
</attribute>
<attribute name="density" get="1" set="1" size="1" type="float64">
<digest>Determines the frequency of events by setting the events parameter of the underlying euclidean pattern.</digest>
</attribute>
<attribute name="windows" get="1" set="1" size="1" type="float64">
<digest>Number of windows that will be used to mask or unmask the underlying euclidean pattern.</digest>
</attribute>
<attribute name="rotate" get="1" set="1" size="1" type="float64">
<digest>Amount to wrap the pattern as a proportion of the total pattern length.</digest>
</attribute>
<attribute name="windowlength" get="1" set="1" size="1" type="float64">
<digest>Length of the window as a (quantized) proportion of the total number of steps in the pattern. Positive values extend the window forward in time, while negative values extend it backwad.</digest>
</attribute>
<attribute name="operator" get="1" set="1" size="1" type="float64">
<digest>Determines whether the windows mask or unmask the underlying pattern.</digest>
</attribute>
<attribute name="variation" get="1" set="1" size="1" type="float64">
<digest>Randomizes the events in the pattern.</digest>
</attribute>
<attribute name="variation seed" get="1" set="1" size="1" type="float64">
<digest>Randomizes the events in the pattern.</digest>
</attribute>
</attributelist>
<description>seq.emask~ layers two euclidean sequence generators to create a highly customizable pattern generator. The first generator is controlled using the <at>steps</at> and <at>density</at> parameters and creates a pattern of gates. The second pattern creates “windows” that mask or unmask the first pattern. The object also allows you to add a controlled amount of randomized variation to the pattern. The result is a dynamic, varying pattern generator with lots of possibilities.</description>
<digest>Advanced parametric gate pattern generator.</digest>
<seealsolist>
    <seealsolist>
        <seealso name="seq.euclidean~" />
        <seealso name="seq.binary~" />
        <seealso name="seq.pprob~" />
        <seealso name="seq.rprob~" />
        <seealso name="seq.pattern~" />
    </seealsolist>
</seealsolist>
</c74object>